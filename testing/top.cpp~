#include "systemc.h"
#include "filter.h"
#include "top.h"
#include <sstream>
#include <iostream>
#include "stdint.h"
#include <fstream>
using namespace std;

int array[4][3],array1[4][3],array2[4][3];

void top::send_pixel(){
	
	unsigned short lsb,isb,msb; //assign least sig bit, inner sig bit, most sig bit variables
	uint32_t rgb_24_bit; //assign 24 bit rgb signal variables
	
	int size_x = max_cols.read().to_int();
	int size_y = max_rows.read().to_int();
	int rows = 0,cols = 0;
	bool notFinish = true;
	
	while(notFinish){
	
		sending = false;
	
		do wait();while(!start);
		
		newimage = true;
		
		do wait();while(!ready);
		cout << "got the ready" << endl;
		cout << "size_x " << size_x << endl;
		cout << "cols " << cols << endl;
		cout << "rows " << rows << endl;		
		
		lsb = array[rows][cols];
		wait();
			
		isb = array1[rows][cols];
		wait();
		
		msb = array2[rows][cols];
		wait();
		
		cols++;
			
		rgb_24_bit = lsb | isb << 8 | msb << 16;
		wait();
		
		RGB_24_bit.write(rgb_24_bit);
		wait();
			
		cout << "24 bit write" << endl;
		sending = true;
		wait();
			
		if(cols >= size_x){
			cols = 0;
			rows++;
		}
		wait();
		
		if(rows >= size_y){
			rows = 0;
			notFinish = false;
			cout << " finished if on top side: " << endl;
		}		
		wait();	
	}
}


int sc_main(int argc, char* argv[]){
	sc_clock c1;
	sc_signal<bool> start,newimage,ready,sending;
	sc_signal<sc_uint<24> > RGB;
	sc_signal<sc_int<16> > col_size, row_size;

	col_size = 4;
	row_size = 3;	

	//-----initializes input module ports to signals------
	top newtop("top");
	newtop.clock(c1);
	newtop.newimage(newimage);
	newtop.sending(sending);
	newtop.ready(ready);
	newtop.RGB_24_bit(RGB);
	newtop.max_cols(col_size);
	newtop.max_rows(row_size);
	newtop.start(start);
	//-------------------------------------------
	
	//-----initializes filter module ports to signals------
	filter newfilter("FILTER");
	newfilter.clock(c1);
	newfilter.newimage(newimage);
	newfilter.ready(ready);
	newfilter.RGB_24_bit(RGB);
	newfilter.max_cols(col_size);
	newfilter.max_rows(row_size);
	newfilter.sending(sending);
	//-------------------------------------------------
	
	ofstream myfile;
	myfile.open("text.txt");
	for(int i = 0; i < 3;i++){
		for(int j = 0 ; j < 4;j++){
			array[i][j] = rand()%256;
			array1[i][j] = rand()%256;
			array2[i][j] = rand()%256;
			myfile << array[i][j] << " ";
			myfile << array1[i][j] << " ";
			myfile << array2[i][j] << " ";
		}
		myfile << "\n";
	}
	myfile.close();
	
	
	start = true;
	sc_start(300, SC_NS);

	return(0);
	

}
